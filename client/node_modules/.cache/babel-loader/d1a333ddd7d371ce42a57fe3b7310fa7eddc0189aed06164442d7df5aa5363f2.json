{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\paulo\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\social-media-react\\\\client\\\\src\\\\components\\\\comments\\\\Comments.jsx\",\n  _s = $RefreshSig$();\nimport { useContext, useState } from \"react\";\nimport \"./comments.scss\";\nimport { AuthContext } from \"../../context/authContext\";\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport { makeRequest } from \"../../axios\";\nimport moment from \"moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comments = ({\n  postId\n}) => {\n  _s();\n  const [description, setDescription] = useState(\"\");\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const {\n    isLoading,\n    error,\n    data\n  } = useQuery({\n    queryKey: [\"comments\"],\n    queryFn: () => makeRequest.get(\"/comments?postId=\" + postId).then(res => res.data)\n  });\n  const queryClient = useQueryClient();\n  const mutation = useMutation({\n    mutationFn: newComment => makeRequest.post(\"/comments\", newComment),\n    onSuccess: () => {\n      queryClient.invalidateQueries([\"comments\"]);\n    }\n  });\n  const handleClick = async e => {\n    e.preventDefault();\n    mutation.mutate({\n      description,\n      postId\n    });\n    setDescription(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comments\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"write\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: currentUser.profilePic,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: description,\n        placeholder: \"write a comment\",\n        onChange: e => setDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), isLoading ? \"Loading\" : data.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n        src: comment.profilePicture,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: comment.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: comment.desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"date\",\n        children: moment(comment.createdAt).fromNow()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(Comments, \"WnaIZsNsijv91ONjJYDCklwgRpg=\", false, function () {\n  return [useQuery, useQueryClient, useMutation];\n});\n_c = Comments;\nexport default Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["useContext","useState","AuthContext","useQuery","useMutation","useQueryClient","makeRequest","moment","jsxDEV","_jsxDEV","Comments","postId","_s","description","setDescription","currentUser","isLoading","error","data","queryKey","queryFn","get","then","res","queryClient","mutation","mutationFn","newComment","post","onSuccess","invalidateQueries","handleClick","e","preventDefault","mutate","className","children","src","profilePic","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","value","placeholder","onChange","target","onClick","map","comment","profilePicture","name","desc","createdAt","fromNow","index","_c","$RefreshReg$"],"sources":["C:/Users/paulo/OneDrive/Área de Trabalho/social-media-react/client/src/components/comments/Comments.jsx"],"sourcesContent":["import { useContext, useState } from \"react\";\r\nimport \"./comments.scss\";\r\nimport { AuthContext } from \"../../context/authContext\";\r\nimport { \r\n  useQuery \r\n  ,useMutation,\r\n  useQueryClient,} \r\n  from '@tanstack/react-query'\r\nimport { makeRequest } from \"../../axios\";\r\nimport moment from \"moment\"; \r\n\r\nconst Comments = ({postId}) => {\r\n  const [description, setDescription] = useState(\"\");\r\n  const { currentUser } = useContext(AuthContext);\r\n  \r\n  const { isLoading, error, data } = useQuery({\r\n    queryKey: [\"comments\"],\r\n    queryFn: () => makeRequest.get(\"/comments?postId=\"+postId).then(res => res.data),\r\n  });\r\n\r\n  const queryClient = useQueryClient();\r\n\r\n  const mutation = useMutation({\r\n    mutationFn: (newComment) => makeRequest.post(\"/comments\", newComment),\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries([\"comments\"]);\r\n    }\r\n  });\r\n  \r\n\r\n  const handleClick = async (e) =>{\r\n    e.preventDefault();\r\n    mutation.mutate({description, postId});\r\n    setDescription(\"\");\r\n  };\r\n\r\n\r\n  \r\n  return (\r\n    <div className=\"comments\">\r\n      <div className=\"write\">\r\n        <img src={currentUser.profilePic} alt=\"\" />\r\n        <input type=\"text\" value={description} placeholder=\"write a comment\" onChange={e=>setDescription(e.target.value)} />\r\n        <button onClick={handleClick}>Send</button>\r\n      </div>\r\n      {isLoading \r\n      ? \"Loading\" \r\n      : data.map((comment) => (\r\n        <div className=\"comment\" key={index}> {/* Usando o índice como chave */}\r\n          <img src={comment.profilePicture} alt=\"\" />\r\n          <div className=\"info\">\r\n            <span>{comment.name}</span>\r\n            <p>{comment.desc}</p>\r\n          </div>\r\n          <span className=\"date\">{moment(comment.createdAt).fromNow()}</span>\r\n        </div>\r\n      ))\r\n    }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Comments;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}