{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\paulo\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\social-media-react\\\\client\\\\src\\\\components\\\\update\\\\Update.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { makeRequest } from \"../../axios\";\nimport \"./update.scss\";\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport CloudUploadIcon from \"@mui/icons-material/CloudUpload\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Update = ({\n  setOpenUpdate\n}) => {\n  _s();\n  const [cover, setCover] = useState(null);\n  const [profile, setProfile] = useState(null);\n  const [text, setTexts] = useState({\n    name: \"\",\n    city: \"\",\n    website: \"\"\n  });\n  const handleChange = e => {\n    setTexts(prev => ({\n      ...prev,\n      [e.target.name]: [e.target.value]\n    }));\n  };\n  const upload = async file => {\n    try {\n      const formData = new FormData();\n      formData.append(\"file\", file);\n      const res = await makeRequest.post(\"/upload\", formData);\n      return res.data.filePath;\n    } catch (err) {\n      console.log(err);\n      return \"\";\n    }\n  };\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const queryClient = useQueryClient();\n  const mutation = useMutation({\n    mutationFn: user => makeRequest.put(\"/users\", user),\n    onSuccess: () => {\n      queryClient.invalidateQueries([\"users\"]);\n    }\n  });\n  const handleClick = async e => {\n    e.preventDefault();\n    let imgUrl = \"\";\n    if (file) imgUrl = await upload();\n    mutation.mutate({\n      description,\n      img: imgUrl\n    });\n    setDescription(\"\");\n    setFile(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"update\",\n    children: [\"Update\", /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        onChange: {\n          handleChange\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"city\",\n        onChange: {\n          handleChange\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"website\",\n        onChange: {\n          handleChange\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setOpenUpdate(false),\n      children: \"X\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n_s(Update, \"GKzWe6cwFZ9s3TsfTwHe3Y9Kmos=\", false, function () {\n  return [useQueryClient, useMutation];\n});\n_c = Update;\nexport default Update;\nvar _c;\n$RefreshReg$(_c, \"Update\");","map":{"version":3,"names":["useState","makeRequest","useMutation","useQueryClient","CloudUploadIcon","jsxDEV","_jsxDEV","Update","setOpenUpdate","_s","cover","setCover","profile","setProfile","text","setTexts","name","city","website","handleChange","e","prev","target","value","upload","file","formData","FormData","append","res","post","data","filePath","err","console","log","currentUser","useContext","AuthContext","queryClient","mutation","mutationFn","user","put","onSuccess","invalidateQueries","handleClick","preventDefault","imgUrl","mutate","description","img","setDescription","setFile","className","children","type","fileName","_jsxFileName","lineNumber","columnNumber","onChange","onClick","handleSubmit","_c","$RefreshReg$"],"sources":["C:/Users/paulo/OneDrive/Área de Trabalho/social-media-react/client/src/components/update/Update.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport { makeRequest } from \"../../axios\";\r\nimport \"./update.scss\";\r\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\r\nimport CloudUploadIcon from \"@mui/icons-material/CloudUpload\";\r\n\r\nconst Update = ({setOpenUpdate}) => {\r\n\r\n    const[cover, setCover] = useState(null);\r\n    const[profile, setProfile] = useState(null);\r\n\r\n    const [text, setTexts] = useState({\r\n        name: \"\",\r\n        city: \"\",\r\n        website: \"\",\r\n    });\r\n\r\n    const handleChange = (e) =>{\r\n        setTexts((prev) => ({...prev, [e.target.name]: [e.target.value]}));\r\n    };\r\n\r\n    const upload = async (file) => {\r\n        try {\r\n          const formData = new FormData();\r\n          formData.append(\"file\", file);\r\n          const res = await makeRequest.post(\"/upload\", formData);\r\n          return res.data.filePath; \r\n      \r\n        } catch (err) {\r\n          console.log(err);\r\n          return \"\"; \r\n        }\r\n      };\r\n\r\n      const {currentUser} = useContext(AuthContext);\r\n      \r\n        const queryClient = useQueryClient();\r\n      \r\n        const mutation = useMutation({\r\n          mutationFn: (user) => makeRequest.put(\"/users\", user),\r\n          onSuccess: () => {\r\n            queryClient.invalidateQueries([\"users\"]);\r\n          }\r\n        });\r\n        \r\n      \r\n        const handleClick = async (e) =>{\r\n          e.preventDefault();\r\n          let imgUrl = \"\";\r\n          if(file) imgUrl = await upload();\r\n          mutation.mutate({description, img: imgUrl});\r\n          setDescription(\"\");\r\n          setFile(null);\r\n        };\r\n      \r\n    return (\r\n        <div className=\"update\">\r\n            Update\r\n            <form>\r\n                <input type=\"file\" />\r\n                <input type=\"file\" />\r\n                <input type=\"text\" name=\"name\" onChange={{handleChange}} />\r\n                <input type=\"text\" name=\"city\" onChange={{handleChange}} />\r\n                <input type=\"text\" name=\"website\" onChange={{handleChange}} />\r\n                <button onClick={handleSubmit}>Save</button>\r\n            </form>\r\n             <button onClick={()=> setOpenUpdate(false)}>X</button>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Update"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}