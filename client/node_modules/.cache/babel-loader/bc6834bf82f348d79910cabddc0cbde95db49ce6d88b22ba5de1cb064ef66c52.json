{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\paulo\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\social-media-react\\\\client\\\\src\\\\components\\\\comments\\\\Comments.jsx\",\n  _s = $RefreshSig$();\nimport { useContext } from \"react\";\nimport \"./comments.scss\";\nimport { AuthContext } from \"../../context/authContext\";\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport { makeRequest } from \"../../axios\";\nimport moment from \"moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comments = ({\n  postId\n}) => {\n  _s();\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const {\n    isLoading,\n    error,\n    data\n  } = useQuery({\n    queryKey: [\"comments\"],\n    queryFn: () => makeRequest.get(\"/comments?postId=\" + postId).then(res => res.data)\n  });\n  const queryClient = useQueryClient();\n  const mutation = useMutation({\n    mutationFn: newPost => makeRequest.post(\"/posts\", newPost),\n    onSuccess: () => {\n      queryClient.invalidateQueries([\"posts\"]);\n    }\n  });\n  const handleClick = async e => {\n    e.preventDefault();\n    let imgUrl = \"\";\n    if (file) imgUrl = await upload();\n    mutation.mutate({\n      description,\n      img: imgUrl\n    });\n    setDescription(\"\");\n    setFile(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comments\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"write\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: currentUser.profilePic,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"write a comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), isLoading ? \"Loading\" : data.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: comment.profilePicture,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: comment.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: comment.desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"date\",\n        children: moment(comment.createdAt).fromNow()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(Comments, \"Ya7hQxP3rvhpqz0ZEXjH4K8u+Tk=\", false, function () {\n  return [useQuery, useQueryClient, useMutation];\n});\n_c = Comments;\nexport default Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["useContext","AuthContext","useQuery","useMutation","useQueryClient","makeRequest","moment","jsxDEV","_jsxDEV","Comments","postId","_s","currentUser","isLoading","error","data","queryKey","queryFn","get","then","res","queryClient","mutation","mutationFn","newPost","post","onSuccess","invalidateQueries","handleClick","e","preventDefault","imgUrl","file","upload","mutate","description","img","setDescription","setFile","className","children","src","profilePic","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","map","comment","profilePicture","name","desc","createdAt","fromNow","_c","$RefreshReg$"],"sources":["C:/Users/paulo/OneDrive/Área de Trabalho/social-media-react/client/src/components/comments/Comments.jsx"],"sourcesContent":["import { useContext } from \"react\";\r\nimport \"./comments.scss\";\r\nimport { AuthContext } from \"../../context/authContext\";\r\nimport { useQuery ,useMutation,\r\n  useQueryClient,} from '@tanstack/react-query'\r\nimport { makeRequest } from \"../../axios\";\r\nimport moment from \"moment\"; \r\nconst Comments = ({postId}) => {\r\n  const { currentUser } = useContext(AuthContext);\r\n  \r\n  const { isLoading, error, data } = useQuery({\r\n    queryKey: [\"comments\"],\r\n    queryFn: () => makeRequest.get(\"/comments?postId=\"+postId).then(res => res.data),\r\n  });\r\n\r\n  const queryClient = useQueryClient();\r\n\r\n  const mutation = useMutation({\r\n    mutationFn: (newPost) => makeRequest.post(\"/posts\", newPost),\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries([\"posts\"]);\r\n    }\r\n  });\r\n  \r\n\r\n  const handleClick = async (e) =>{\r\n    e.preventDefault();\r\n    let imgUrl = \"\";\r\n    if(file) imgUrl = await upload();\r\n    mutation.mutate({description, img: imgUrl});\r\n    setDescription(\"\");\r\n    setFile(null);\r\n  };\r\n\r\n\r\n  \r\n  return (\r\n    <div className=\"comments\">\r\n      <div className=\"write\">\r\n        <img src={currentUser.profilePic} alt=\"\" />\r\n        <input type=\"text\" placeholder=\"write a comment\" />\r\n        <button>Send</button>\r\n      </div>\r\n      {isLoading \r\n      ? \"Loading\" \r\n      : data.map((comment) => (\r\n        <div className=\"comment\">\r\n          <img src={comment.profilePicture} alt=\"\" />\r\n          <div className=\"info\">\r\n            <span>{comment.name}</span>\r\n            <p>{comment.desc}</p>\r\n          </div>\r\n          <span className=\"date\">{moment(comment.createdAt).fromNow()}</span>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Comments;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}